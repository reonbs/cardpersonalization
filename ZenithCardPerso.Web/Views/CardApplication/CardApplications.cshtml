@model ZenithCardRepo.Data.ViewModel.CardAppViewModel

@{
    ViewBag.Title = "CardApplications";
}

<div class="row">
    <div class="col-xs-12">
        <div class="page-title-box">
            <h4 class="page-title">Card Applicaton</h4>
            <div class="clearfix"></div>
        </div>
    </div>
</div>
<br />
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    var cardApplications = ViewBag.CardApplications as List<ZenithCardRepo.Data.DTOs.CardApplicationsDTO>;
    <!---Validation msg start-->
    <div class="row">
        @if (ViewData?.ModelState[""]?.Errors?.Any() == true) //@ViewBag.Error != null
        {
            <div class="alert alert-icon alert-danger alert-dismissible fade in" role="alert">
                <button type="button" class="close" data-dismiss="alert"
                        aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <i class="mdi mdi-block-helper"></i>
                @Html.ValidationSummary()
            </div>

        }
        @if (TempData["Message"] as string == "Successonapproval")
        {
            <div class="alert alert-icon alert-success alert-dismissible fade in" role="alert">
                <button type="button" class="close" data-dismiss="alert"
                        aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <i class="mdi mdi-check-all"></i>
                <span>Your request for approval was successful</span>
            </div>
        }
        @if (TempData["Message"] as string == "failedprocess")
        {
            <div class="alert alert-icon alert-danger alert-dismissible fade in" role="alert">
                <button type="button" class="close" data-dismiss="alert"
                        aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <i class="mdi mdi-block-helper"></i>
                <span>There is not available cards to be processed</span>
            </div>
        }
    </div>
    <!---Validation msg end-->
    @Html.Hidden("HDComment")
    @Html.Hidden("FromDate")
    @Html.Hidden("ToDate")
    <div class="row card-box">
        <div class="col-sm-12">
            <div class="form-group">
                <div class="col-md-3">
                    @Html.LabelFor(m => m.FromDate)
                    <div class="input-group">
                        @*@Html.EditorFor(m => m.FromDate, new { htmlAttributes = new { @class = "form-control" } })*@
                        <input id="SearchFromDate" class="form-control" />
                        <span class="input-group-addon bg-custom b-0"><i class="mdi mdi-calendar text-white"></i></span>
                    </div>
                </div>
                <div class="col-md-3">
                    @Html.LabelFor(m => m.ToDate)
                    <div class="input-group">
                        @*@Html.EditorFor(m => m.ToDate, new { htmlAttributes = new { @class = "form-control" } })*@
                        <input id="SearchToDate" class="form-control" />
                        <span class="input-group-addon bg-custom b-0"><i class="mdi mdi-calendar text-white"></i></span>
                    </div>
                </div>
                <div class="col-md-3">
                    @Html.LabelFor(m => m.Processed)
                    @Html.DropDownListFor(m => m.Processed, ViewData["IsProcessed"] as SelectList, "", new { @class = "form-control" })
                </div>
                <div class="col-md-3">
                    @Html.LabelFor(m => m.BatchNo)
                    @Html.EditorFor(m => m.BatchNo, new { htmlAttributes = new { @class = "form-control" } })
                </div>
                <div class="col-md-3">
                    @Html.LabelFor(m => m.Institution)
                    @Html.DropDownListFor(m => m.Institution, ViewData["Institution"] as SelectList, "", new { @class = "form-control select2" })
                </div>
                <div class="col-md-3">
                    @Html.LabelFor(m => m.Department)
                    <select id="Department" name="Department" class="form-control select2">
                        <option></option>
                    </select>
                </div>
                <div class="col-md-3">
                    @Html.LabelFor(m => m.IsApproved)
                    @Html.DropDownListFor(m => m.IsApproved, ViewData["IsApproved"] as SelectList, "", new { @class = "form-control" })
                </div>
            </div>
        </div>
    </div>
    <div class="row pull-right">
        @if (cardApplications?.Count > 0)
        {
            <span><button type="submit" formaction=@Url.Action("ExportToExcel","CardApplication") formmethod="post" class="btn btn-primary waves-effect w-md waves-light m-b-5">Export To Excel</button></span>
        }
        else
        {
            <button class="btn btn-primary waves-effect w-md waves-light m-b-5" disabled>Export To Excel</button>
        }
        <span><button type="submit" formaction=@Url.Action("CardApplications","CardApplication") formmethod="post" class="btn btn-primary waves-effect w-md waves-light m-b-5">Search</button></span>

        @if (false)//Convert.ToBoolean(ViewData["IsDownloadRequired"])
        {
            @*@Html.ActionLink("Request Approval", "CardDownloadApproval", "CardApplication", new { batchNo = (Model == null) ? "" : Model.BatchNo, ID = Model.}, new { @class = "btn btn-primary waves-effect w-md waves-light m-b-5" })*@
            <span>
                <button id="requestApprovalBTN" type="button" class="btn btn-primary waves-effect w-md waves-light m-b-5">Request Appoval</button>

            </span>
        }
        else
        {
            if (cardApplications?.Count > 0)
            {
                <button type="submit" formaction=@Url.Action("ProcessCard", "CardApplication") formmethod="post" class="btn btn-primary waves-effect w-md waves-light m-b-5">Process Card</button>
            }
            else
            {

                <button class="btn btn-primary waves-effect w-md waves-light m-b-5" disabled>Process Card</button>
            }

        }
        <span><button id="deleteCardsBTN" type="button" class="btn btn-primary waves-effect w-md waves-light m-b-5">Delete</button></span>

    </div>
    <button id="requestApprovalSBT" type="submit" formaction=@Url.Action("CardDownloadApproval","CardApplication") formmethod="post" class="notToShow">Request Approval</button>
    <button id="deleteCardsSBT" type="submit" formaction=@Url.Action("DeleteCardApplications","CardApplication") formmethod="post" class="notToShow">Delete</button>
    <div id="commentModal" class="modal" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Comment</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div id="commentDiv"></div>
                    <input id="commentTXT" type="text" class="form-control" row="3" multiple />
                </div>
                <div class="modal-footer">
                    <input id="commentBTN" type=button value="Submit" class="btn btn-primary">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
    <br />


    @Html.Partial("SearchResult", cardApplications)

    @section Scripts{
        <script>
            $(function () {
                $('#SearchFromDate, #SearchToDate').datepicker({
                    dateFormat: "dd/mm/yy"
                    
                });

                $('#tblSearcResults').dataTable();
               // $('#Department, #Institution').select2();

                $('#Institution').on('change', function () {
                    var instID = $(this).val();
                    $.get("@Url.Action("GetDepartment", "CardApplication")", { instID: instID }, function (data) {//'/CardApplication/GetDepartment/?instID=' + instID
                        $('#Department').empty();
                        $('#Department').append('<option></option>');

                        $.each(data, function (i, v) {
                            $('#Department').append('<option value=' + v.Code + '>' + v.Name + '</option>');
                        });
                    });
                });
                var isSelectedCount = 0;

                $('#requestApprovalBTN').on('click', function () {

                    if (isSelectedCount > 0) {
                        $('#commentModal').modal('show');
                    } else {
                        alert("Select card application you want to request approval for");
                    }


                });

                $('#commentBTN').click(function () {
                    if (confirm('Are you sure you want to submit?')) {
                        var comment = $('#commentTXT').val();

                        $('#HDComment').val(comment);
                        $('#commentModal').modal('hide');

                        $('#requestApprovalSBT').click();
                    }
                });

                $('#deleteCardsBTN').click(function () {
                    if (isSelectedCount > 0) {
                        if (confirm("Are you sure you want to delete?")) {
                            $('#deleteCardsSBT').click();
                        }
                    } else {
                        alert("Select card application you want to delete");
                    }

                });

                $("input[id$=IsSelected]").on("change", function () {
                    if ($(this).is(":checked")) {
                        isSelectedCount += 1;;
                    } else {
                        isSelectedCount -= 1;
                    }
                });

                $('#SearchFromDate').on('change',
                    function() {
                        var date = $(this).val();

                        var newDate = date.replace(/\//g, 's');

                        $('#FromDate').val(newDate);
                    });

                $('#SearchToDate').on('change',
                    function() {
                        var date = $(this).val();

                        var newDate = date.replace(/\//g, 's');

                        $('#ToDate').val(newDate);
                    });

                function toggleChecked(status) {
                    $("#tblSearcResults input").each(function () {
                        // Set the checked status of each to match the
                        // checked status of the check all checkbox:
                        $(this).prop("checked", status);
                    });
                }



               // Grab a reference to the check all box:
               //var checkAllBox = $("#checkall");

               //Set the default value of the global checkbox to true:
                //checkAllBox.prop('checked', true);

                // Attach the call to toggleChecked to the
                // click event of the global checkbox:
                    //checkAllBox.click(function () {
                    //    var status = checkAllBox.prop('checked');
                    //    toggleChecked(status);
                    //});

            });
        </script>
    }

}