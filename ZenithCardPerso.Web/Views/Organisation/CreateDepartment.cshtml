@model ZenithCardRepo.Data.Models.Department
@{
    ViewBag.Title = "CreateDepartment";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="row">
        <div class="col-xs-12">
            <div class="page-title-box">
                <h4 class="page-title">Create Department</h4>
                <div class="clearfix"></div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-sm-12">
            <div class="card-box">
                <!---Validation msg start-->
                <div class="row">
                    @if (ViewData?.ModelState[""]?.Errors?.Any() == true) //@ViewBag.Error != null
                    {
                        <div class="alert alert-icon alert-danger alert-dismissible fade in" role="alert">
                            <button type="button" class="close" data-dismiss="alert"
                                    aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                            <i class="mdi mdi-block-helper"></i>
                            @Html.ValidationSummary()
                        </div>

                    }
                    @if (TempData["Message"] as string == "Success")
                    {
                        <div class="alert alert-icon alert-success alert-dismissible fade in" role="alert">
                            <button type="button" class="close" data-dismiss="alert"
                                    aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                            <i class="mdi mdi-check-all"></i>
                            <span>Departmnet was successfully created</span>
                        </div>
                    }
                </div>
                <!---Validation msg end-->
                <div class="row">
                    <div class="col-md-12">
                        <div class="form-group">
                            <div class="col-md-8">
                                @Html.Label("Institution", new { @class = "control-label" })
                                @Html.DropDownListFor(m => m.InstitutionID, ViewData["Institution"] as SelectList, "----Select---", new { @class = "form-control select2" })
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-8">
                                @Html.LabelFor(m => m.Name, new { @class = "control-label" })
                                @Html.EditorFor(m => m.Name, new { htmlAttributes = new { @class = "form-control" } })

                                @*<input type="text" name="Name" id="Name"  class="form-control">*@

                                <input type="text" name="country" id="autocomplete-ajax-x" disabled="disabled" class="form-control" style="color: #CCC; position: absolute; background: transparent; z-index: 1;display: none;" />
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-8">
                                @Html.LabelFor(m => m.Code, new { @class = "control-label" })
                                @Html.EditorFor(m => m.Code, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                        </div>
                    </div>

                    <button type="submit" class="btn btn-purple waves-effect waves-light pull-right">Submit</button>

                </div>
            </div>
        </div>
    </div>
}

@section Scripts{
    <script type="text/javascript">
        $(function () {
            $('#InstitutionID').select2();
            
            var departmentsArray = [];
            $('#InstitutionID').on('change', function () {
                var instID = $(this).val();

                $.post("/Organisation/GetDepartments/?instID=" + instID, function (data) {
                    
                    //departmentsArray = $.map(data, function (value, key) { return { value: value, data: key }; });
                    console.log(departmentsArray);
                    // Initialize ajax autocomplete:
                    $('#Name').autocomplete({
                        // serviceUrl: '/autosuggest/service/url',
                        lookup: $.map(data, function (value, key) { return { value: value, data: key }; }),
                        lookupFilter: function (suggestion, originalQuery, queryLowerCase) {
                            var re = new RegExp('\\b' + $.Autocomplete.utils.escapeRegExChars(queryLowerCase), 'gi');
                            return re.test(suggestion.value);
                        },
                        onSelect: function (suggestion) {
                            $('#selction-ajax').html('You selected: ' + suggestion.value + ', ' + suggestion.data);
                        },
                        onHint: function (hint) {
                            $('#autocomplete-ajax-x').val(hint);
                        },
                        onInvalidateSelection: function () {
                            $('#selction-ajax').html('You selected: none');
                        }
                    });
                });

            });

           

            
        });
    </script>
}


