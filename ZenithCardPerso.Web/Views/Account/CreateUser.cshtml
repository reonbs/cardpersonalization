@model ZenithCardPerso.Web.Models.RegisterViewModel
@using Microsoft.AspNet.Identity
@using System.Security.Claims
@{
    ViewBag.Title = "Register";
    //Layout = "~/Views/Shared/_LayoutLogin.cshtml";
    var permissions = (User.Identity as ClaimsIdentity).FindFirstValue("UserPermissions");
}


@using (Html.BeginForm("CreateUser", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary("", new { @class = "text-danger" })

    <div class="row">
        <div class="col-xs-12">
            <div class="page-title-box">
                <h4 class="page-title">Create User</h4>
                <div class="clearfix"></div>
            </div>
        </div>
    </div>
    <!---Validation msg start-->
    <div class="row">
        @if (ViewData?.ModelState[""]?.Errors?.Any() == true) //@ViewBag.Error != null
        {
            <div class="alert alert-icon alert-danger alert-dismissible fade in" role="alert">
                <button type="button" class="close" data-dismiss="alert"
                        aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <i class="mdi mdi-block-helper"></i>
                @Html.ValidationSummary()
            </div>

        }
        @if (TempData["Message"] as string == "Success")
        {
            <div class="alert alert-icon alert-success alert-dismissible fade in" role="alert">
                <button type="button" class="close" data-dismiss="alert"
                        aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <i class="mdi mdi-check-all"></i>
                <span>User was successfully created</span>
            </div>
        }
    </div>
    <!---Validation msg end-->
    <div class="row">
        <div class="col-sm-12">
            <div class="card-box">
                <div class="form-group">
                    <div class="col-md-4">
                        @Html.LabelFor(m => m.UserName, new { @class = "control-label" })
                        @Html.TextBoxFor(m => m.UserName, new { @class = "form-control" })
                    </div>
                    <div class="col-xs-4">
                        @if (!permissions.Contains("can_create_institutionusers"))
                        {
                            @Html.Label("Institution", new { @class = "control-label" })
                            @Html.DropDownListFor(m => m.InstitutionID, ViewData["Institution"] as SelectList, "----Select---", new { @class = "form-control select2" })
                        }
                        else
                        {
                            @Html.Label("Institution", new { @class = "control-label" })
                            @Html.DropDownListFor(m => m.InstitutionID, ViewData["Institution"] as SelectList, "----Select---", new { @class = "", disabled = "disabled" })
                            
                        }

                    </div>
                    <div class="col-xs-4">
                        @Html.LabelFor(m => m.Password, new { @class = "control-label" })
                        @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                    </div>
                    <div class="col-xs-4">
                        @Html.LabelFor(m => m.ConfirmPassword, new { @class = "control-label" })
                        @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
                    </div>
                    <div class="col-md-4">
                        @Html.LabelFor(m => m.Email, new { @class = "control-label" })
                        @Html.EditorFor(m => m.Email, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                    <div class="col-md-4">
                        @Html.LabelFor(m => m.FirstName, new { @class = "control-label" })
                        @Html.EditorFor(m => m.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                    <div class="col-md-4">
                        @Html.LabelFor(m => m.MiddleName, new { @class = "control-label" })
                        @Html.EditorFor(m => m.MiddleName, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                    <div class="col-md-4">
                        @Html.LabelFor(m => m.LastName, new { @class = "control-label" })
                        @Html.EditorFor(m => m.LastName, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                    <div class="col-md-4">
                        @Html.LabelFor(m => m.IsDisabled, new { @class = "control-label" })
                        <br />
                        @Html.CheckBoxFor(m => m.IsDisabled)
                    </div>
                </div>

                @if (!permissions.Contains("can_create_institutionusers"))
                {
                    <hr />
                    <h4>Roles</h4>
                    <hr />

                    var UserRole = ViewBag.UserRoles as List<ZenithCardPerso.Web.Models.UserRoleViewModel>;

                    <table id="tblUserEdit" class="table table-bordered">
                        <thead>
                            <tr>
                                <th></th>
                                <th>Role Name</th>
                            </tr>
                        </thead>
                        @for (int i = 0; i < UserRole.Count(); i++)
                        {

                            <tbody>
                                <tr>
                                    <td>@Html.CheckBox("UserRole[" + @i + "].SelectedRole", UserRole[i].SelectedRole)</td>
                                    <td> @Html.TextBox("UserRole[" + @i + "].Role", UserRole[i].Role, new { @readonly = "readonly", @class = "qty readonly" })</td>
                                </tr>
                            </tbody>
                        }
                    </table>
                }



                <button class="btn btn-primary pull-right" type="submit">Create</button>


            </div>
        </div>
    </div>

}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(function () {
            $('#InstitutionID').select2();
            $('#InstitutionID').on("change", function () {
                if ($('#InstitutionID').prop("disabled")) {
                    alert("You can only create users for your institution, contact the administrator");
                    location.href ="/Account/CreateUser"
                    return;
                }
            })
        });
    </script>
}
